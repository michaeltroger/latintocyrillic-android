name: Create Release Build

on:
  workflow_dispatch:
    inputs:
      upload_to_google:
        description: "Upload to Google Play"
        required: true
        type: boolean
        default: true
jobs:
  build:

    runs-on: ubuntu-latest

    env:
      JAVA_VERSION: '17'
      CREDENTIALS_DIR: 'credentials'
      AAB_FILE: 'app/build/outputs/bundle/release/app-release.aab'
      APK_FILE: 'app/build/outputs/apk/release/app-release.apk'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build App Bundle and APK
        run: |
          mkdir "$CREDENTIALS_DIR"
          echo "$RELEASE_KEYSTORE" | base64 -d > "$CREDENTIALS_DIR/keystore.jks"
          ./gradlew bundleRelease assembleRelease
        env:
          RELEASE_KEYSTORE_PROPERTIES: ${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}

      - name: Remove any credentials
        if: always()
        run: rm -rd "$CREDENTIALS_DIR"

      - name: Extract version code and version name
        run: |
          echo "VERSION_NAME="$(scripts/get_version_name)"" >> $GITHUB_ENV
          echo "VERSION_CODE="$(scripts/get_version_code)"" >> $GITHUB_ENV

      - name: Create tag and release on GitHub if not already done
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION_CODE }}
          name: ${{ env.VERSION_NAME }}
          bodyFile: fastlane/metadata/android/en-US/changelogs/${{ env.VERSION_CODE }}.txt
          artifacts: ${{ env.APK_FILE }}
          makeLatest: true
          skipIfReleaseExists: true
          artifactErrorsFailBuild: true

      - name: Setup Ruby
        if: ${{ inputs.upload_to_google }}
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Upload app to Google Play
        if: ${{ inputs.upload_to_google }}
        run: bundle exec fastlane google
        env:
          PLAY_STORE_CREDENTIALS: ${{ secrets.PLAY_STORE_CREDENTIALS }}
